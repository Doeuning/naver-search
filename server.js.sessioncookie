// express 호출
const express = require("express");
const morgan = require("morgan");
const cookieParser = require("cookie-parser");
const session = require("express-session");
const logger = require("morgan");
const app = express();

// 포트 설정
app.set("port", process.env.PORT || 4000);

// 공통 미들웨어 장착
app.use(express.static(__dirname + "/public"));
app.use(morgan("dev"));
app.use(cookieParser("secret@1234"));
app.use(
  session({
    secret: "secret@1234",
    resave: false,
    saveUninitialized: true,
    cookie: {
      httpOnly: true,
    },
    name: "connect.sid",
  })
);
app.use(express.json());
app.use(logger("combined"));
app.use(express.urlencoded({ extended: true }));

// 라우팅 설정
app
  .get("/", (req, res, next) => {
    if (req.session.name) {
      const output = `
        <h2>로그인한 사용자님</h2><br>
        <p>${req.session.name}님 안녕하세요.</p>
      `;
      res.send(output);
    } else {
      const output = `
        <h2>로그아웃 상태입니다.</h2><br>
        <p>로그인 해주세요.</p>
      `;
      res.send(output);
    }
  })
  .get("/login", (req, res, next) => {
    console.log(req.session);
    req.session.name = "로드북";
    res.end(`login ok ${req.session.name}`);
  })
  .get("/logout", (req, res) => {
    res.clearCookie("connect.sid");
    res.end("logout ok");
  });

// 서버와 포트 연결
app.listen(app.get("port"), () => {
  console.log(app.get("port") + "포트에서 서버 실행중");
}); // 포트 연결, 서버 실행
